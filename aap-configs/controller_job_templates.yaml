---
controller_templates:
  - name: "Product Demos | Single demo setup"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Product Demos"
    inventory: "Demo Inventory"
    playbook: "setup_demo.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 0
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    credentials:
      - "Controller Credential"
    allow_simultaneous: true
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: false
    ask_limit_on_launch: false
    ask_credential_on_launch: false
    ask_execution_environment_on_launch: false
    ask_labels_on_launch: false
    ask_forks_on_launch: false
    ask_job_slice_count_on_launch: false
    ask_timeout_on_launch: false
    ask_instance_groups_on_launch: false
    extra_vars: ""
    job_tags: ""
    force_handlers: false
    skip_tags: ""
    start_at_task: ""
    timeout: 0
    custom_virtualenv: ""
    host_config_key: ""
    survey_enabled: true
    survey_spec:
      name: ""
      spec:
        - type: multiplechoice
          choices:
            - "linux"
            - "windows"
            - "cloud"
            - "network"
            - "openshift"
            - "satellite"
          required: True
          variable: demo
          question_name: !unsafe "Demo Category"
      description: ""
    become_enabled: false
    diff_mode: false
    webhook_service: ""
    prevent_instance_group_fallback: false

  - name: "Product Demos | Multi-demo setup"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Product Demos"
    inventory: "Demo Inventory"
    playbook: "multi_select_setup.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 0
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    credentials:
      - "Controller Credential"
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: false
    ask_limit_on_launch: false
    ask_credential_on_launch: false
    ask_execution_environment_on_launch: false
    ask_labels_on_launch: false
    ask_forks_on_launch: false
    ask_job_slice_count_on_launch: false
    ask_timeout_on_launch: false
    ask_instance_groups_on_launch: false
    extra_vars: ""
    job_tags: ""
    force_handlers: false
    skip_tags: ""
    start_at_task: ""
    timeout: 0
    custom_virtualenv: ""
    host_config_key: ""
    survey_enabled: true
    survey_spec:
      name: ""
      spec:
        - type: multiselect
          choices:
            - "cloud"
            - "linux"
            - "network"
            - "openshift"
            - "satellite"
            - "windows"
          default: !unsafe "cloud\nlinux\nnetwork\nopenshift\nwindows"
          required: True
          variable: demos
          question_name: !unsafe "Which demos do you want to configure?"
      description: ""
    become_enabled: false
    diff_mode: false
    webhook_service: ""
    prevent_instance_group_fallback: false

  # Temporarily disabled - requires Hashicorp Vault Demos project which has sync issues
  # - name: "Hashicorp Vault demo setup"
  #   description: !unsafe ''
  #   organization: "Default"
  #   project: "Ansible Automation Post Deploy Demos"
  #   playbook: "playbooks/aap/update_credentials.yml"
  #   ...rest of config...

  - name: "Create Standard Change Record"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Automation Post Deploy Demos"
    inventory: "Demo Inventory"
    playbook: "playbooks/snow_create_cr.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 0
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: true
    credentials:
      - "SNOW Dev Instance"
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: false
    ask_limit_on_launch: false
    ask_credential_on_launch: false
    ask_execution_environment_on_launch: false
    ask_labels_on_launch: false
    ask_forks_on_launch: false
    ask_job_slice_count_on_launch: false
    ask_timeout_on_launch: false
    ask_instance_groups_on_launch: false
    extra_vars: ""
    job_tags: ""
    force_handlers: false
    skip_tags: ""
    start_at_task: ""
    timeout: 0
    custom_virtualenv: ""
    host_config_key: ""
    survey_enabled: false
    become_enabled: false
    diff_mode: false
    webhook_service: ""
    prevent_instance_group_fallback: false

  - name: "Install Vault Agent"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Automation Post Deploy Demos"
    inventory: "Demo Inventory"
    playbook: "playbooks/1-install-vault-agent.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 0
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    credentials: []
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: true
    ask_limit_on_launch: false
    ask_credential_on_launch: true

  - name: "Install Application"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Automation Post Deploy Demos"
    inventory: "Demo Inventory"
    playbook: "playbooks/2-install-podman-web.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 0
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    credentials: []
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: true
    ask_limit_on_launch: false
    ask_credential_on_launch: true

  - name: "Security Harden"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Automation Post Deploy Demos"
    inventory: "Demo Inventory"
    playbook: "playbooks/3-compliance-enforce.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 0
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    credentials: []
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: true
    ask_limit_on_launch: false
    ask_credential_on_launch: true
    ask_execution_environment_on_launch: false
    ask_labels_on_launch: false
    ask_forks_on_launch: false
    ask_job_slice_count_on_launch: false
    ask_timeout_on_launch: false
    ask_instance_groups_on_launch: false
    extra_vars: ""
    job_tags: ""
    force_handlers: false
    skip_tags: ""
    start_at_task: ""
    timeout: 0
    custom_virtualenv: ""
    host_config_key: ""
    survey_enabled: true
    survey_spec:
      name: ""
      spec:
        - max: 1024
          min: 0
          type: text
          default: !unsafe "e8"
          required: True
          variable: compliance_profile
          new_question: True
          question_name: !unsafe "Compliance Profile"
      description: ""
    become_enabled: false
    diff_mode: false
    webhook_service: ""
    prevent_instance_group_fallback: false

  - name: "Post Validation"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Automation Post Deploy Demos"
    inventory: "Demo Inventory"
    playbook: "playbooks/4-validation.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 0
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    credentials: []
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: true
    ask_limit_on_launch: false
    ask_credential_on_launch: true
    ask_execution_environment_on_launch: false
    ask_labels_on_launch: false
    ask_forks_on_launch: false
    ask_job_slice_count_on_launch: false
    ask_timeout_on_launch: false
    ask_instance_groups_on_launch: false
    extra_vars: ""
    job_tags: ""
    force_handlers: false
    skip_tags: ""
    start_at_task: ""
    timeout: 0
    custom_virtualenv: ""
    host_config_key: ""
    survey_enabled: false
    become_enabled: false
    diff_mode: false
    webhook_service: ""
    prevent_instance_group_fallback: false

  - name: "Close SNOW Change Record"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Automation Post Deploy Demos"
    inventory: "Demo Inventory"
    playbook: "playbooks/snow_close_cr.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 0
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    credentials:
      - "Demo Machine Credential"
      - "SNOW Dev Instance"
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: true
    ask_limit_on_launch: false
    ask_credential_on_launch: false
    ask_execution_environment_on_launch: false
    ask_labels_on_launch: false
    ask_forks_on_launch: false
    ask_job_slice_count_on_launch: false
    ask_timeout_on_launch: false
    ask_instance_groups_on_launch: false
    extra_vars: ""
    job_tags: ""
    force_handlers: false
    skip_tags: ""
    start_at_task: ""
    timeout: 0
    custom_virtualenv: ""
    host_config_key: ""
    survey_enabled: false
    become_enabled: false
    diff_mode: false
    webhook_service: ""
    prevent_instance_group_fallback: false

  - name: "Raise Incident Ticket"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Automation Post Deploy Demos"
    inventory: "Demo Inventory"
    playbook: "playbooks/raise-incident-ticket.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 0
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    credentials:
      - "SNOW Dev Instance"
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: true
    ask_limit_on_launch: false
    ask_credential_on_launch: false
    ask_execution_environment_on_launch: false
    ask_labels_on_launch: false
    ask_forks_on_launch: false
    ask_job_slice_count_on_launch: false
    ask_timeout_on_launch: false
    ask_instance_groups_on_launch: false
    extra_vars: ""
    job_tags: ""
    force_handlers: false
    skip_tags: ""
    start_at_task: ""
    timeout: 0
    custom_virtualenv: ""
    host_config_key: ""
    survey_enabled: false
    become_enabled: false
    diff_mode: false
    webhook_service: ""
    prevent_instance_group_fallback: false

  - name: "Update SNOW CMDB"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Automation Post Deploy Demos"
    inventory: "Demo Inventory"
    playbook: "playbooks/snow_cmdb_update.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 0
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    credentials:
      - "SNOW Dev Instance"
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: true
    ask_limit_on_launch: false
    ask_credential_on_launch: true
    ask_execution_environment_on_launch: false
    ask_labels_on_launch: false
    ask_forks_on_launch: false
    ask_job_slice_count_on_launch: false
    ask_timeout_on_launch: false
    ask_instance_groups_on_launch: false
    extra_vars: ""
    job_tags: ""
    force_handlers: false
    skip_tags: ""
    start_at_task: ""
    timeout: 0
    custom_virtualenv: ""
    host_config_key: ""
    survey_enabled: false
    become_enabled: false
    diff_mode: false
    webhook_service: ""
    prevent_instance_group_fallback: false

  - name: "Get Event Detail"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Automation Post Deploy Demos"
    inventory: "Demo Inventory"
    playbook: "playbooks/get-event-detail.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 0
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: false
    ask_limit_on_launch: false
    ask_credential_on_launch: false
    ask_execution_environment_on_launch: false
    ask_labels_on_launch: false
    ask_forks_on_launch: false
    ask_job_slice_count_on_launch: false
    ask_timeout_on_launch: false
    ask_instance_groups_on_launch: false
    extra_vars: ""
    job_tags: ""
    force_handlers: false
    skip_tags: ""
    start_at_task: ""
    timeout: 0
    custom_virtualenv: ""
    host_config_key: ""
    survey_enabled: false
    become_enabled: false
    diff_mode: false
    webhook_service: ""
    prevent_instance_group_fallback: false

  - name: "Remediate Config Drift"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Automation Post Deploy Demos"
    inventory: "Demo Inventory"
    playbook: "playbooks/remediate-drift.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 0
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    credentials:
      - "SNOW Dev Instance"
      - "HCP Terraform API Token - CollabTeam"
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: false
    ask_limit_on_launch: false
    ask_credential_on_launch: false
    ask_execution_environment_on_launch: false
    ask_labels_on_launch: false
    ask_forks_on_launch: false
    ask_job_slice_count_on_launch: false
    ask_timeout_on_launch: false
    ask_instance_groups_on_launch: false
    extra_vars: ""
    job_tags: ""
    force_handlers: false
    skip_tags: ""
    start_at_task: ""
    timeout: 0
    custom_virtualenv: ""
    host_config_key: ""
    survey_enabled: true
    survey_spec:
      name: ""
      spec:
        - max: 1024
          min: 0
          type: text
          default: !unsafe "ws-1KbG5voDWemxecsB"
          required: True
          variable: tfc_workplace_id
          new_question: True
          question_name: !unsafe "TFC Workspace ID"
        - max: 1024
          min: 0
          type: text
          default: !unsafe "INC0010033"
          required: True
          variable: ticket_number
          new_question: True
          question_name: !unsafe "SNOW Incident Ticket Number"
      description: ""
    become_enabled: false
    diff_mode: false
    webhook_service: ""
    prevent_instance_group_fallback: false

  - name: "Pre Remediate Plan"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Automation Post Deploy Demos"
    inventory: "Demo Inventory"
    playbook: "playbooks/pre-remediate-plan.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 0
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    credentials:
      - "SNOW Dev Instance"
      - "HCP Terraform API Token - CollabTeam"
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: false
    ask_limit_on_launch: false
    ask_credential_on_launch: false
    ask_execution_environment_on_launch: false
    ask_labels_on_launch: false
    ask_forks_on_launch: false
    ask_job_slice_count_on_launch: false
    ask_timeout_on_launch: false
    ask_instance_groups_on_launch: false
    extra_vars: ""
    job_tags: ""
    force_handlers: false
    skip_tags: ""
    start_at_task: ""
    timeout: 0
    custom_virtualenv: ""
    host_config_key: ""
    survey_enabled: true
    survey_spec:
      name: ""
      spec:
        - max: 1024
          min: 0
          type: text
          default: !unsafe "ws-1KbG5voDWemxecsB"
          required: True
          variable: tfc_workspace_id
          new_question: True
          question_name: !unsafe "TFC Workpace ID"
        - max: 1024
          min: 0
          type: text
          default: !unsafe "INC0010033"
          required: True
          variable: ticket_number
          new_question: False
          question_name: !unsafe "SNOW Incident Ticket Number"
      description: ""
    become_enabled: false
    diff_mode: false
    webhook_service: ""
    prevent_instance_group_fallback: false

  - name: "Close Incident Ticket"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Automation Post Deploy Demos"
    inventory: "Demo Inventory"
    playbook: "playbooks/close-incident-ticket.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 0
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    credentials:
      - "SNOW Dev Instance"
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: false
    ask_limit_on_launch: false
    ask_credential_on_launch: false
    ask_execution_environment_on_launch: false
    ask_labels_on_launch: false
    ask_forks_on_launch: false
    ask_job_slice_count_on_launch: false
    ask_timeout_on_launch: false
    ask_instance_groups_on_launch: false
    extra_vars: ""
    job_tags: ""
    force_handlers: false
    skip_tags: ""
    start_at_task: ""
    timeout: 0
    custom_virtualenv: ""
    host_config_key: ""
    survey_enabled: false
    become_enabled: false
    diff_mode: false
    webhook_service: ""
    prevent_instance_group_fallback: false

  - name: "Create SNOW Normal Change Record"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Automation Post Deploy Demos"
    inventory: "Demo Inventory"
    playbook: "playbooks/snow_create_cr_wait.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 0
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    credentials:
      - "Demo Machine Credential"
      - "SNOW Dev Instance"
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: true
    ask_limit_on_launch: false
    ask_credential_on_launch: false
    ask_execution_environment_on_launch: false
    ask_labels_on_launch: false
    ask_forks_on_launch: false
    ask_job_slice_count_on_launch: false
    ask_timeout_on_launch: false
    ask_instance_groups_on_launch: false
    extra_vars: ""
    job_tags: ""
    force_handlers: false
    skip_tags: ""
    start_at_task: ""
    timeout: 0
    custom_virtualenv: ""
    host_config_key: ""
    survey_enabled: false
    become_enabled: false
    diff_mode: false
    webhook_service: ""
    prevent_instance_group_fallback: false

  # Temporarily removed - playbook doesn't exist in current project
  # - name: "ServiceNow Dev Instance Provisioning"
  #   description: !unsafe ''
  #   organization: "Default" 
  #   project: "Ansible Automation Post Deploy Demos"
  #   inventory: "Demo Inventory"
  #   playbook: "playbooks/service_now/provision-servicenow-dev.yml"
  #   ...rest of config...

